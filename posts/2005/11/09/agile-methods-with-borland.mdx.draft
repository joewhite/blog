---
title: "Agile Methods with Borland  #Delphi  #borcon2005  #extreme programming"
sort: 2232
---
<p>Birds of a Feather: Agile Methods with Borland</p>
<p>Matt Gelbwaks - Borland</p>
<p><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p>&nbsp;</p>
<p><o:p>This was pretty much exclusively done as a Q&amp;A session. We came up with questions up front, and then they tried to answer as many as they could.</o:p></p>
<p><o:p>&nbsp;</o:p></p>
<p>Note: All the questions we ask during this session are going to become requirements and scenarios in Borland's feature backlog. Cool!</p>
<p><o:p>&nbsp;</o:p></p>
<p>Interesting idea: show a scatter graph of estimated vs. actual time for each story. Hopefully that scatter graph will get closer and closer to a 45-degree line over time.</p>
<p><o:p>&nbsp;</o:p></p>
<p>If we have ideas for new information radiators we'd like to see, tell Borland, or e-mail an example to Dan Massey. That's dmassey, on the obvious domain name.</p>
<p><o:p>&nbsp;</o:p></p>
<p>What's Borland's experience with agile?</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Borland was doing agile before there was agile: in 1992, they were already doing short iterations, etc.
<li>Today, some teams are doing formal Scrum with StarTeam
<li>Larger projects: "release train" (like Eclipse - I'm not sure exactly what that means...)
<ul style="MARGIN-TOP: 0in" type=circle>
<li>6-week milestones
<li>Some teams do smaller iterations within that
<li>All requirements in CaliberRM
<li>All bugs in StarTeam
<li>Starting to use Tempo</li></ul>
<li>Many of Borland's larger clients have SarbOx requirements, and have audit requirements. Need to prove that the work is being done the way it's supposed to be done (so some developers need to spend their time auditing instead of developing). To really do agile, they probably need to automate that.</li></ul>
<p>How do we capture key design decisions in Together?</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>e.g., how do you capture the alternatives that were considered?
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Consider: Instead of making a decision, hold off as long as possible, to show you're thinking about it. Include all three options in the diagram, label them somehow. As you figure out what will drive the decision, you can keep notes. (last responsible moment)
<li>Keep track of the set of options that are available. Don't collapse them into an actual decision until the iteration where you depend on that decision.</li></ul>
<li>There are some feature requests that might cover this&#8230;
<li>Short-term: using a Description field to record those decisions; whenever a decision is made, it should have been a requirement, so roll that back into the requirements repository (so it may feed into other projects)
<li>Could use version control to store the history of the discussion (StarTeam's threaded discussions).
<li>Use linkages between tools (e.g., links into CaliberRM)</li></ul>
<p>How do you reconcile informality of agile with formal communication?</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Agile does require discipline, and a way to be measured.
<li>Use the discussion feature in CaliberRM to record the hallway discussion you just had (and why).
<li>You can't necessarily capture those hallway conversations. But when you're having an actual meeting, bring up the requirements grid and change it right there &#8211; don't make notes and update the requirements later.
<li>Give visibility to the time you spend on formal communication.
<li>Problem with discussion feature: no way to find out whether there are open questions still hanging. Is the thread closed?</li></ul>
<p>Selling agile to management</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>What's the problem you're trying to solve? Measure it and start improving: timeboxes, testing, etc.</li></ul>
<p>What do you do when you can't find someone with the time to play the role of customer?</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Borland's actual clients don't have a body to send to Borland, so Borland uses full-time surrogates
<li>If you can't even get a full-time surrogate, try doing a big investment of time up-front, using Maya or some such
<li>Then use tools like CaliberRM to keep the discussion going in trickle format
<li>Three axes to address - people, process, technology
<li>People
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Deliver early and often</li></ul>
<li>Process
<ul style="MARGIN-TOP: 0in" type=circle>
<li>More time up front</li></ul>
<li>Technology
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Radiators
<li>Web context</li></ul>
<li>Possiblity #1: If there is no customer who thinks it's worth their time, there's no agility &#8211; and the value of the project is zero. If management isn't willing to make a person available to tell you whether you're on the right track, there's zero chance we'll deliver what you need, and this whole project is wasted effort.
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Maybe the person you're delivering to isn't really your customer. They might be your end user, but they're not your customer.
<li>Go ahead and deliver the wrong thing (which it will be, since nobody ever told you what they wanted), but deliver it with panache. If you get them mad at you, maybe they'll take a little more interest. (Nice idea if this actually worked&#8230;)</li></ul>
<li>Possibility #2: Sit down with customer and Maya, to elicit requirements. Deliver something tangible and viewable, quickly, that shows understanding. (Maya is coming out sometime next quarter) Or otherwise find a way to show value immediately.</li></ul>
