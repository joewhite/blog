---
title: "Object/Relational Mapping with InstantObjects  #Delphi  #borcon2005"
sort: 2229
---
<p>Okay, I'm finally getting a chance to catch up on my blogging. Here are my notes from the "Object/Relational Mapping with InstantObjects" Birds-of-a-Feather session this morning, led by <a href="http://blog.marcocantu.com/">Marco Cant&#249;</a>.<span style="FONT-SIZE: 12pt"><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></span></p>
<p><o:p>&nbsp;</o:p></p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Object Persistence Framework
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Software layer that persists the objects in the model into a storage medium (decouple model from storage)
<li>Standard implementation of O/R mapping techniques</li></ul>
<li>Advantages
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Not locked into a specific vendor's SQL dialect (database vendors are your enemies)
<li>Ability to leverage the OO methodology
<li>Reduction of redundancies in the application code</li></ul>
<li>Disadvantages
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Steeper learning curve
<li>Inability to use some features of the DB server
<ul style="MARGIN-TOP: 0in" type=square>
<li>Server-side programming, locking, transactions&#8230;</li></ul>
<li>Possibly slower and memory-hungry applications</li></ul></li></ul>
<p>OPFs in <?xml:namespace prefix = st1 ns = "urn:schemas-microsoft-com:office:smarttags" /><st1:place>Delphi</st1:place></p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Bold (Win32) / ECO (.NET)
<ul style="MARGIN-TOP: 0in" type=circle>
<li>More than a simple OPF, <st1:City><st1:place>Enterprise</st1:place></st1:City> class, MDA and OCL support, ECO only available in .NET</li></ul>
<li>InstantObjects
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Open source; soft learning curve
<li>Based on Scott Ambler's approach (see <a href="http://www.ambysoft.com/">www.ambysoft.com</a>)</li></ul>
<li>TechInsite OPF (tiOPF)
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Open source; steeper learning curve; high rate of project activity</li></ul>
<li>Roll-Out-Your-Own
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Maybe not the best place to start &#8211; try something else first
<li>See oodesign newsgroup
<li>Joanna Carter's Web site
<ul style="MARGIN-TOP: 0in" type=square>
<li>She used to host a similar BOF at past conferences&#8230;</li></ul></li></ul></li></ul>
<p>InstantObjects</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Main advantages of InstantObjects
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Nice integration with <st1:place>Delphi</st1:place>'s IDE
<li>Very flexible at the Business Object Model level
<li>Supports standard data-aware controls
<ul style="MARGIN-TOP: 0in" type=square>
<li>through TInstantSelector and TInstantExposer</li></ul>
<li>Solid base of users and developers</li></ul>
<li>&#8230;and current drawbacks:
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Constraints on the database structure
<ul style="MARGIN-TOP: 0in" type=square>
<li>Structure and names of keys and relationship tables are currently fixed
<li>V2 improves things through the "external storage" feature
<li>Was originally designed for Paradox tables &#8211; some stuff was stored in BLOB fields. In v2 it's a memo with XML.</li></ul>
<li>Data access is not always very fast
<ul style="MARGIN-TOP: 0in" type=square>
<li>Again, things get better in v2 thanks to new brokers and new optimizations</li></ul></li></ul></li></ul>
<p>Model Explorer pane in IDE</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Add new class &#8211; looks like it may need to descend from TInstantObject
<li>Can put class in new unit or in existing unit
<li>Add attributes via GUI dialogs. You need to have an ID in every table, but you can add other attributes.
<li>Name of database field doesn't have to be the same as the property name.
<li>Generates code with magic comments.
<li>For every field, you get an attribute object (TInstantString, TInstantInteger, etc., and you can add your own). It doesn't try to rely on RTTI, partly because you need more info than RTTI can provide, partly because you may want to create rich types (like Address that contains street address, city, etc.)
<li>Creates a class with properties (with getters and setters that read/write the embedded attribute object).
<li>Some extra metadata (max length of string fields, etc.) is put into a comment inside the class declaration. Not actually used directly at design time, except that it's used to generate the persistence code.
<li>The new class doesn't have a constructor &#8211; just published fields for the attribute objects. Presumably the base class constructor uses RTTI to instantiate those attribute objects.
<li>It isn't smart enough to automatically quote field names when they're reserved words. You'll have to manually specify the storage name for that attribute.
<li>TInstantSelector is a TDataSet descendant. Lets you pick which object type it contains. You pick the object class, not the table name.
<li>Got a Stack Overflow in the demo (oops). Well, it's a beta version of InstantObjects running on a beta version of <st1:place>Delphi</st1:place>&#8230;</li></ul>
<p>Developing InstantObjects</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Project organization
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Ethea is a company backing it
<li>Marco is hosting the support site</li></ul>
<li>Roadmap
<ul style="MARGIN-TOP: 0in" type=circle>
<li>Finally getting v2.0 out (still beta 1 stage)
<ul style="MARGIN-TOP: 0in" type=square>
<li>Arrays of objects</li></ul>
<li>Restructuring and improving documentation
<ul style="MARGIN-TOP: 0in" type=square>
<li>Both user and developer documentation</li></ul>
<li>Recruiting new developers and contributors
<li>Getting work done on new features</li></ul></li></ul>
<p>Q&amp;A</p>
<ul style="MARGIN-TOP: 0in" type=disc>
<li>Q: How do you handle inheritance? Base class and descendant classes?<br/>A: Single table can host multiple datatypes &#8211; class name is stored in each row.
<li>If you're coming from a relational background, read Fowler's "Analysis Patterns". (Read it several times &#8211; it'll be pretty scary the first time or two.)</li></ul>
<p><a href="http://www.instantobjects.org">www.instantobjects.org</a></p>
