---
title: "Visual Studio strangeness  #.NET"
sort: 2009
---
<p>Just goes to show that Delphi 8 isn't the only IDE that does <a href="http://blog.excastle.com/2004/08/20/amusing-delphi-8-debugger-error/">incomprehensible things</a> now and then.</p>
<p>I just got our latest code from VSS and tried to compile our solution in Visual Studio. I got an error list a mile long, because, of course, VS isn't bright enough to, oh, <em>stop compiling</em> when it gets a compiler error. No, it just goes right on its merry little way, compiling the rest of the solution without a care in the world. And since one of the projects failed to compile, the old version of its assembly is still lying around, so it compiles all the other projects in the solution against the <em>old</em> version of that assembly &#8212; but against the newer version of any other assemblies that <em>did</em> compile successfully. So, of course, the errors snowball, because the versions expect different properties, different method signatures, etc. And then, to top it all off, it shows the errors in some sort of wacky reverse-chronological-yet-not-quite-reverse-chronological order, so that the errors you need to see are very nearly at the bottom of the list (about 5 or 10 lines up, usually, though sometimes more), and the chain-reaction errors (from linking against the old version of an assembly that didn't compile) are at the top. <em>So</em> helpful. So very, very helpful it is indeed. One can only hope that Whidbey and MSBuild will be a little more intelligent about the whole thing. Here's hoping fervently.</p>
<p>But I digress.</p>
<p>Anyway, it turns out that the first-generation errors were on a class we had descended from the <a href="http://www.xceedsoft.com/products/GridNet/">Xceed Grid</a>'s Cell class. The compiler was saying things like "GridControl doesn't have a property of type GridControl".</p>
<p>Mind you, nothing (relevant) had changed. I looked through the diffs to make sure. The project file hasn't changed in weeks. The source file it was complaining about hasn't changed in weeks. It just... wouldn't compile.</p>
<p>Eventually I puzzled out the reason. Visual Studio had arbitrarily, capriciously, and with malice aforethought decided to load the wrong version of the Xceed Grid assembly. (Not any of the other Xceed assemblies. Not even the other Xceed assemblies <em>that themselves reference</em> the newer grid assembly.) It just up and loaded version 1.1 of Xceed.Grid.dll instead of version 2.1. It even had the gall to pretend it was <em>supposed</em> to do this &#8212; when I clicked on the project's Xceed.Grid.dll reference in Solution Explorer, it merrily told me the path it had loaded from, and the version it had loaded. Meanwhile, the project file explicitly lists the exact version that it's supposed to load (and it ain't 1.1), and even specifies the exact path where that version of the assembly can be found.</p>
<p>Visual Studio actually went to the <em>wrong drive</em> to load the older version. That's how bound and determined it was to make my day... interesting.</p>
<p>The fix was simple: I closed the solution, deleted the entire Xceed Grid 1.1 directory from my (second) hard drive, and reopened the solution. (cue singing angels) And all is now well with the world.</p>
<p>Still, I'm... disturbed... at the lengths it had to go to to screw up. It had to work at it. It <em>really</em> had to work at it.</p>
